---
import { cva } from "class-variance-authority";

interface Props {
  variant?: "none" | "light" | "dark";
  type?: "image" | "video";
  src: string;
  alt?: string;
}

const { variant = "light", type = "image", src, alt = "" } = Astro.props;

const backgroundVariants = cva(
  "relative h-screen max-h-[1000px] w-full min-h-[500px] lg:min-h-[600px]",
  {
    variants: {
      overlay: {
        none: "",
        light:
          "before:absolute before:inset-0 before:bg-white before:opacity-30",
        dark: "before:absolute before:inset-0 before:bg-black before:opacity-30",
      },
      type: {
        image: "",
        video: "z-10",
      },
    },
    defaultVariants: {
      overlay: "none",
      type: "image",
    },
  }
);

const baseClasses = backgroundVariants({ overlay: variant, type });
---

<div class:list={[baseClasses, "overflow-hidden"]}>
  {
    type === "video" ? (
      <video
        aria-hidden="true"
        muted
        class="absolute inset-0 h-full w-full object-cover transition-opacity duration-300 pointer-events-none"
        autoplay
        playsinline
      >
        <source src={src} type="video/mp4" />
        Your browser does not support the video tag.
      </video>
    ) : (
      <img
        src={src}
        alt={alt}
        class="absolute inset-0 h-full w-full object-cover rounded-br-[88px]"
        loading="eager"
      />
    )
  }
  {
    type === "video" && (
      <button
        aria-label="Toggle video playback"
        class="absolute bottom-4 right-4 z-50 px-4 py-2 bg-gray-900 text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2"
        id="videoToggle"
      >
        Play/Pause
      </button>
    )
  }
</div>

<script>
  const videoElement = document.querySelector("video");
  const toggleButton = document.getElementById("videoToggle");

  if (videoElement && toggleButton) {
    toggleButton.addEventListener("click", () => {
      if (videoElement.paused) {
        videoElement.play();
      } else {
        videoElement.pause();
      }
    });
  }
</script>
