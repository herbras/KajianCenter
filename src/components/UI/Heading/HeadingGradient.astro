---
import { cva, type VariantProps } from "class-variance-authority";

const headingVariants = cva(
  "tracking-tight pb-3 bg-clip-text text-transparent",
  {
    variants: {
      variant: {
        default:
          "bg-gradient-to-t from-neutral-700 to-neutral-800 dark:from-stone-200 dark:to-neutral-200",
        pink: "bg-gradient-to-t from-accent to-accent/90 dark:from-stone-200 dark:to-neutral-200",
        light: "bg-gradient-to-t from-neutral-200 to-neutral-300",
        secondary:
          "bg-gradient-to-t from-primary-foreground to-muted-foreground",
        teal: "bg-gradient-to-t from-teal-700 to-teal-500",
        blue: "bg-gradient-to-t from-blue-700 to-blue-500",
        purple: "bg-gradient-to-t from-purple-700 to-purple-500",
        green: "bg-gradient-to-t from-green-700 to-green-500",
        orange: "bg-gradient-to-t from-orange-700 to-orange-500",
      },
      size: {
        default: "text-2xl sm:text-3xl lg:text-4xl",
        xxs: "text-base sm:text-lg lg:text-lg",
        xs: "text-lg sm:text-xl lg:text-2xl",
        sm: "text-xl sm:text-2xl lg:text-3xl",
        md: "text-2xl sm:text-3xl lg:text-4xl",
        lg: "text-3xl sm:text-4xl lg:text-5xl",
        xl: "text-4xl sm:text-5xl lg:text-6xl",
        xxl: "text-5xl sm:text-6xl lg:text-[6rem]",
        xxxl: "text-5xl sm:text-6xl lg:text-[8rem]",
      },
      weight: {
        default: "font-bold",
        thin: "font-thin",
        base: "font-base",
        semi: "font-semibold",
        bold: "font-bold",
        black: "font-black",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
      weight: "default",
    },
  }
);

export interface Props extends VariantProps<typeof headingVariants> {
  as?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
  class?: string;
}

const {
  as: Element = "h3",
  variant = "default",
  weight = "default",
  size = "default",
  class: className = "",
  ...rest
} = Astro.props;

const headingClass = headingVariants({ variant, size, weight });
---

<Element {...rest} class:list={[className]}>
  <span class:list={[headingClass]}>
    <slot />
  </span>
</Element>
